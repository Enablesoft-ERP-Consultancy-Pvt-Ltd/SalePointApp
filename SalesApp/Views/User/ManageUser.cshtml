@model SalesApp.ViewModel.UserLoginVM;
@{
    ViewBag.Title = "Add User";
    if (this.ViewContext.FormContext == null)
    {
        this.ViewContext.FormContext = new FormContext();
    }
}

<h2>Add User</h2>


@using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">.
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPass, "", new { @class = "text-danger" })
            </div>
        </div>

      @*  <div class="form-group" id="pass" style="display:none">
            @Html.LabelFor(model => model.LoginPass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginPass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginPass, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleId, Model.loginroles as IEnumerable<SelectListItem>, "Select", new { onchange = "showpass()" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>
      @*  <div class="form-group">
            <label asp-for="ProfileImage" class="control-label"></label>
            <div class="custom-file">
                <input asp-for="ProfileImage" class="custom-file-input" id="customFile">
                <label class="custom-file-label" for="customFile">Choose file</label>
            </div>
            <span asp-validation-for="ProfileImage" class="text-danger"></span>
        </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit" type="submit" value="Create" class="btn btn-default" style="background-color:black;color:white;" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $("#submit").click(function () {
        var form = $("form")
            .removeData("validator") /* added by the raw jquery.validate plugin */
            .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

        $.validator.unobtrusive.parse(form);

        form.data('unobtrusiveValidation');
    });



    function showpass() {
        debugger;
        var rollid = $('#RoleId option:selected').val();
        rollid = parseInt(rollid);
        if (rollid != null) {
            if (rollid > 0) {
                if (rollid == 2 || rollid == 5) {
                    $('#pass').show();
                }
                else {
                    $('#pass').hide();
                }

            }


        }


    }
    $(".custom-file-input").on("change", function () {
        var fileName = $(this).val().split("\\").pop();
        $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });
</script>
